{"ast":null,"code":"var _jsxFileName = \"/home/nick/Code/project-holotag/holotag-react-landing/src/pages/QuestPage.js\";\nimport React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport Article from '../components/Article';\nimport Header from '../components/Header';\nexport default class QuestPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadArticles = articleList => {\n      return articleList.map(article => {\n        return /*#__PURE__*/React.createElement(Container, {\n          fluid: \"true\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Article, {\n          articleTitle: article.articleTitle,\n          articleContent: article.articleContent,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }\n        }));\n      });\n    };\n\n    this.state = {\n      articleList: [{\n        articleTitle: \"What are quests?\",\n        articleContent: \"Description\"\n      }, {\n        articleTitle: \"How do I start a quest?\",\n        articleContent: \"Description\"\n      }, {\n        articleTitle: \"How do I create a quest?\",\n        articleContent: \"Description\"\n      }, {\n        articleTitle: \"What are nodes?\",\n        articleContent: \"Description\"\n      }, {\n        articleTitle: \"How do I find nodes?\",\n        articleContent: \"Description\"\n      }],\n      title: props.title\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      title: this.state.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, this.loadArticles(this.state.articleList), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Example Quest:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"You find a node located a the public library and touch your device to the node. The node then directs your device to a link to the quest. The directions of the quest indicate that you should take a photo of your favorite historical monument located at a nearby park and return to the node. Once you complete the task, you return to the node and once again scan it with your device.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"Now that you have scanned the node once again, it can see that you have previously scanned this node. It will ask you to upload the photo and a story to accompany the photo.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"From there, you can see the photos and stories that have been posted by other users that have visited the node and comleted the quest.\")));\n  }\n\n}","map":{"version":3,"sources":["/home/nick/Code/project-holotag/holotag-react-landing/src/pages/QuestPage.js"],"names":["React","Col","Container","Row","Article","Header","QuestPage","Component","constructor","props","loadArticles","articleList","map","article","articleTitle","articleContent","state","title","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,eAAe,MAAMC,SAAN,SAAwBN,KAAK,CAACO,SAA9B,CAAwC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA8BnBC,YA9BmB,GA8BHC,WAAD,IAAiB;AAC5B,aAAOA,WAAW,CAACC,GAAZ,CAAgBC,OAAO,IAAI;AAC9B,4BACI,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,OAAD;AAAS,UAAA,YAAY,EAAEA,OAAO,CAACC,YAA/B;AAA6C,UAAA,cAAc,EAAED,OAAO,CAACE,cAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAOH,OARM,CAAP;AASH,KAxCkB;;AAGf,SAAKC,KAAL,GAAa;AACTL,MAAAA,WAAW,EAAE,CACT;AACIG,QAAAA,YAAY,EAAE,kBADlB;AAEIC,QAAAA,cAAc,EAAE;AAFpB,OADS,EAKT;AACID,QAAAA,YAAY,EAAE,yBADlB;AAEIC,QAAAA,cAAc,EAAE;AAFpB,OALS,EAST;AACID,QAAAA,YAAY,EAAE,0BADlB;AAEIC,QAAAA,cAAc,EAAE;AAFpB,OATS,EAaT;AACID,QAAAA,YAAY,EAAE,iBADlB;AAEIC,QAAAA,cAAc,EAAE;AAFpB,OAbS,EAiBT;AACID,QAAAA,YAAY,EAAE,sBADlB;AAEIC,QAAAA,cAAc,EAAE;AAFpB,OAjBS,CADJ;AAuBTE,MAAAA,KAAK,EAAER,KAAK,CAACQ;AAvBJ,KAAb;AAyBH;;AAcDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKP,YAAL,CAAkB,KAAKM,KAAL,CAAWL,WAA7B,CADL,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uYANJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uLAXJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gJAfJ,CAFJ,CADJ;AAwBH;;AApEkD","sourcesContent":["import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nimport Article from '../components/Article';\nimport Header from '../components/Header';\n\nexport default class QuestPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            articleList: [\n                {\n                    articleTitle: \"What are quests?\",\n                    articleContent: \"Description\"\n                },\n                {\n                    articleTitle: \"How do I start a quest?\",\n                    articleContent: \"Description\"\n                },\n                {\n                    articleTitle: \"How do I create a quest?\",\n                    articleContent: \"Description\"\n                },\n                {\n                    articleTitle: \"What are nodes?\",\n                    articleContent: \"Description\"\n                },\n                {\n                    articleTitle: \"How do I find nodes?\",\n                    articleContent: \"Description\"\n                }\n            ],\n            title: props.title\n        }\n    }\n\n    loadArticles = (articleList) => {\n        return articleList.map(article => {\n            return (\n                <Container fluid=\"true\">\n                    <Article articleTitle={article.articleTitle} articleContent={article.articleContent} />\n                </Container>\n\n\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Header title={this.state.title} />\n                <Container>\n                    {this.loadArticles(this.state.articleList)}\n\n                    <br />\n\n                    <h5>Example Quest:</h5>\n                    <p>\n                        You find a node located a the public library and touch your device to the node.\n                        The node then directs your device to a link to the quest. The directions of the quest indicate that you should take a photo of your favorite historical monument\n                        located at a nearby park and return to the node. Once you complete the task, you return to the node and once again scan it with your device.\n                    </p>\n                    <p>\n                        Now that you have scanned the node once again, it can see that you have previously scanned this node. It will ask you to upload the photo and a story to\n                        accompany the photo.\n                    </p>\n                    <p>\n                        From there, you can see the photos and stories that have been posted by other users that have visited the node and comleted the quest.\n                    </p>\n                </Container>\n            </div>\n        );\n    }\n}   "]},"metadata":{},"sourceType":"module"}